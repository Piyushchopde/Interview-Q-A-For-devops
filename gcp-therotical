
Compute Engine:
  Genral Purpose 
  memory optimized 
  Compute Optimized 
  Store Optiimized 


Instances: 
Preemptibal VM :  is equal to spot instances in AWS its also called as Stop instance in GCP 
commited use discount : is equal to Reserved intance in AWS

=========================================================================================================================================
Instance-Group 
   - You can install group of instances using single entity called as Instance group 
   - 2 types managed instance group and unmanaged instance group 
        - manage instance group : support auto-scaling: 3 number of autoscaling mode present 1) on 2) off 3) only-scale-out , auto-healing loadbalaceing 
          manage instance group has 2 types : 
           - statefull and stateless
              statefull is use when you have database and dataprocessing related app with the help of that you can persist your data 
              stateless is use when you want to install and perform api related task
           there are many activity you can done during configuration of MIG like autoscaling auto healing , heltcheck , CPU utiliztion ,rooling update ,high avaiblity 
====================================================================********************======================================================================================
Loadbalacer: loadbalancer used to distribute load 

GCP has 3 types of load balacer 1) HTTP & HTTPS loadbalancer 2) TCP loadbalancer 3) UDP loadbalacer
1) - support Internet-facing or internal ,Single- or multi-region
   - 3 types of loadbalancer present 1) Global external application load balancer: 
                                     2) Classic application load balancer
                                     3) Regional external Application Load Balancer
   - during creation of loadbalancer you need to create bankend,frondend and hostpath rule in HTTPS loadbalacer 
     in frondend you need to add port which port you want request 
     in backend you need to select Instance group 
     in hostpath if you have multiple path to send request then you can use it 
--- IN TCP Loadbalacer If you need SSL Offloading then you need to go with ssl proxy
--- If you have global loadbalacering or IPV6 loadbalaceing then you need to have TCP proxy 
- ssl offloading means: when send request its send to https loadbalacer after its trafer to http in instance group that called as ssl off loading 
- ssl proxy is means : when usr send request to loadbalacer its convert as per requriment and send to host
- ssl passthorugh: when user send request is directly send to host without chnaging anything 
  
2) Internet-facing or internal , Single- or multi-region
3) Internet-facing or internal ,Single-region
--- CPUs :if you have massive intensive workload application you need to use GCP related server
---If you configure Live Migration inportent configuration Avaibility configuration  
 
====================================================================********************======================================================================================
GKE: standrad and autopilot mode 
commands: 
gcloud config set project my-kubernetes-project-304910
gcloud container clusters get-credentials my-cluster --zone us-central1-c --project my-kubernetes-project-304910
kubectl create deployment hello-world-rest-api --image=in28min/hello-world-rest-api:0.0.1.RELEASE
kubectl get deployment
kubectl expose deployment hello-world-rest-api --type=LoadBalancer --port=8080
kubectl get services
kubectl get services --watch
curl 35.184.204.214:8080/hello-world
kubectl scale deployment hello-world-rest-api --replicas=3
gcloud container clusters resize my-cluster --node-pool default-pool --num-nodes=2 --zone=us-central1-c
kubectl autoscale deployment hello-world-rest-api --max=4 --cpu-percent=70
kubectl get hpa
kubectl create configmap hello-world-config --from-literal=RDS_DB_NAME=todos
kubectl get configmap
kubectl describe configmap hello-world-config
kubectl create secret generic hello-world-secrets-1 --from-literal=RDS_PASSWORD=dummytodos
kubectl get secret
kubectl describe secret hello-world-secrets-1
kubectl apply -f deployment.yaml
gcloud container node-pools list --zone=us-central1-c --cluster=my-cluster
kubectl get pods -o wide
 
kubectl set image deployment hello-world-rest-api hello-world-rest-api=in28min/hello-world-rest-api:0.0.2.RELEASE
kubectl get services
kubectl get replicasets
kubectl get pods
kubectl delete pod hello-world-rest-api-58dc9d7fcc-8pv7r
 
kubectl scale deployment hello-world-rest-api --replicas=1
kubectl get replicasets
gcloud projects list
 
kubectl delete service hello-world-rest-api
kubectl delete deployment hello-world-rest-api
gcloud container clusters delete my-cluster --zone us-central1-c
====================================================================********************======================================================================================
Google App Engine (GAE): simple way to deploy and scale your application in GCP
- its supports Go,JAVA,Node.js,PHP,python,Ruby 
- Automatic load balaceinga dn auto scaling 
- Application Versioning 
-Server less 

2 Types of APP Engine Enviroments: 
 standrad : Application run in langugage specific sandboxs
          - Complete isolation from OS/Disk/Other Apps
          - V1 : Jva,Python,PHP,Go (Old)
          - V2: Java,Python,PHP,Node.js,Ruby,GO (NEWER Version)
            new networks access and no restriction on languge extensions 
Flexible  : Application instance run within the docker conatiners 
         - Support Any runtime (with build in support for python, Java,Node,js,Go,Ruby,PHP)
         - provide access to background processes and local disk 


 App Engine scaling : 3 types of scaing instnaces in 1) Automatic 2) Basic 3) Manual  
      - Automatic Scaling instance base up on the load 
         - Autoscaling base up on: 
                    - Target CPU Utiliztion : Configure CPU Use Threshold  
                    - Throughput Utiliztion : 
                    - Max concurrent request :
         - Configure Max instances and Min Instances 
      - Basic : Instance are created as when request they are reveived :   
                -  Recommened to adhoc workload 
                - Instances are shutdown for zero workload 
                - not support by app engine flexible enviroment 
                - need to configure max instances and idle timeout 
      - Manual : Configure spefici number of instance to run 
                 adjust number of unstances manually over time   
 Application Components in App Engine : 
**  - Application: We can deploy One App engine per projects and in one APP engine we can deploy multiple microservices ** 
**  - If you want to create app engine in multiple region  then you need to create multipe projects **

Split traffice between multiple version :
   - we can split traffice using many ways :
        - IP Splitting : base on request IP address 
           - IP address can change causing accuray issuse 
        - Cookie splitting : cooki can controled from your application Cookie splitting accuretly assign your to version 
        - Random Splitting  

** dispatch.yaml file user to override routing rule 
** queue.yaml file used to managed task queue 
** app engine flexibal will not scale down to zero  app engine standard will scale down to zero 
** App Engine is region specific you cannot chnage there region once you deploy it 


====================================================================********************======================================================================================

Cloud Functions: 
Google cloud function is light weight event-base asyncronus compute soluation that allow you to create small and single purpose function 
Has 2 Version : 1st gen and 2nd gen 

Cloud Run: 
   - Anthos is used to deploy services within sec its use for Kubenetes cluster 
   - Build on top of openstandrad -Knative 
   - Fully managed serverless flatform for containried applications 
       - Zero infrastrutre platform 
       - Fully managed end-to-end developer expriances

====================================================================********************======================================================================================


Storage: 

Block Storge: 
             - We can attached One Block storage to One VM in Write mode where we can attached multiple VM in read only mode 

             Types of Block Storge in GCP : 
              - Perisitent Disks: Networks Block Storge 
                  - More Durable 
                  - 3 Types: 
                         - Standard 
                         - Balanced
                         - SSD
              - Local SSDs:Local SSD are phycically attached with VM Instances
                    - Its used to hold temp data 
                    - Provide IOPS and low latency beacuse its attached directly to VM 
                    - Cupport SCSI and NVME interface 
File Storge : 
              -  File storge attached to multiple VM at same time
             Types of File   Storge in GCP : 


Encrptions: 
    Data States: 
      -  Data at Rest: Stored on a device or backup 
                    data on the harddisk  in a database , backup or archive 
      - Data in motion : being a trasforred across a networks 
                     Also called as Data in transit 
      - Data in use : Active data processed in a non-persistent state 
                      Data in RAM 

    For encrption we use below argorithm:
      -    Symmetric key encryption algorithm use the same key fo r encrption and decryption  
      -     asymmetric key encrption algoritham has two key public key and private key 
           - also called as public key crptiography 
          - encrpty data with public key and decrpt data with private key 
Cloud KMS:
       - Cloud KMS is use to craete and maganed crptograpic key 
       - Control their used in your application keys and GCP service 
       - use exsiting cryptoghay key created on on-premises 
       - keys types : 
           - Google-managed key : No COnfiguration requried 
           - Cutomer-managed key: Use ey from KMS 
           - Cutomer-suppied key : Provide your own key 

Perisitent Disks Snapshots: 
           - Point-in-Time Snapshots of your persistent Disk 
           - You can also schedule the snapshots 
           - snapshots can be regional and multi-regional 
           - snapshot are incremental 
        

Machine Images: 
 - Similar as AMI in AWS 
 - multiple disk can be attached (One boot and mulyiple data disks)
 - machine image created by VM instances 
 - 


**ACL: Access Control List 
   How this is Different from IAM : 
    - IAM Policy apply to all objects within a buckets 
    - ACL can be use to customized specific access to different object 

   ACL Access Control :
       - Uniform 
       - Fine-grained access : use of conbination of IAM and ACL 

Cloud Storge: Signed URL 
You would want to user to limited access to you object 



Static Webside : 
Condition: 
Create Bucket name is same as website name then Copy file to bucket 
==================================================================================================================================================================================



IAM Roles: first we need to create role assinge permission to that roles then we can bind role to member 
member is also call as principle or identity 
  3 Types of Roles 
   - Basic Roles 
   - predefinded roles 
   - custom roles: where predefind role are not sufficient you can create your own custome roles  
In custome role there are many stages:
              Alpha 
              beta 
              Genral avability  


Service Accounts : Service account use to provide access from one service to another service 
Passowrd does not need they use key base soluation 
during creation of Service Account we can add conditions depending upon that Time,Schedule,Day of week like that 

** For provide permission to om-prime to cloud storge we need to go service account in that service account we need to add key 
   for cretion of private key there are 2 option avaible P12 and JSON formate to athenticate my self            

===========================================================================================================================================================================================================

DATABASES: 
    CGP managed services: 
          - Cloud SQL: Support PostgreSQL,MySQL and SQL Server for regional relational databases
               - its regonal service 
               - Use SSD and HDD 
               - Use 416 GB RAM and 30 TB Data Storge 
               - Reduce your maintance cost 
               - ** FIrst You need to create Cloud SQL instnace in that instance you can create database 
               - Donot Support Multi-region
          - Cloud Spanner: Unlimited scale and its is global applications with horizantal application 
          - Support Multi-region
       
    OLTP Databases: use ROW Storage
        - Each table row is stored together 
        - Efficienr for Processing small transaction 
    OLAP databases use columnar storage ex: BigQuery 
        - Each table column is Stored together 
        - High Compression - Store petabytes of data effiently 
        - Distribute data in multiple cluster Nodes  
        - Execute single quary across multiple nodes 

    NOSQL:  
         - Cloud datastore: Managed Serverless NOsql Document database 
             cloud firestore is next genration of datastore during creation of firestore store you will get native mode and datastore 1) native mode and datastore mode  
               support  Multi-region
         - Cloud Big Table: Managed scalble NoSql wide Columndatabase (Not Serverless) , 10 terabytes of data 
            -   Its PetaByt scale wide colum NOSQL DB (HBase API Compatible)
            - Handal milions of read and write 
            - single row transaction multiple transaction not support 
            - Cannot export data using cloud console 
            - Use CBT Command line toold to work with bigtable 
      
    In-Memory database:  Memory STore 
                            - redis and memcached 
  BigQuary : Exabyte scale modern datawarehousing soluation from GCP 
             - 

=========================================================================================================================================================
VPC: 
 - VPC is global resource in GCP
 - Subnet is reginal 
 - 2 option for creating VPC automode AND custom mode 
 - VPC perring ca be happen with same project, different project and across project in different organization cat be peered  
 - All communication is internal 

Cloud VPN :
 - Connect On-premise networks to GCP Networks
 - Impement using IPSEC VPN 
 - Traffic through Internet 
 - Traffic encrpted using Internete Key exchange 
 2 Types of Cloud VPN Soluation: 
    HA VPN (High Avaibilty VPN ): Support 2 External IP Address
    Classic VPN  : Support Single External IP Address

Cloud COnnect: 
  - High Speed physical connection between on-prise and VPC Networks 

Direct Peering : 
   - Connect Customer Networks to google networks using network peering 

 =========================================================================================================================================================
Cloud Monitoring : 
-You can use cloud Morning to monitor one or more GCP projects and one or more AWS accounts 

- cloud logging: 
 real time log management and analysis tool 
- Exabyte scale and ully managed service 

        
